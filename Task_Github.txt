
************************************************************
*************************  Case 1  *************************
===========================  User 1 ============

1. Создать каталог training_git
2. В каталоге training_git создать 2 файла - index.html,  .gitignore 
  с содержимым

-------------------------------------- index.html
<h1>Index.html</h1>
-------------------------------------------------

-------------------------------------- .gitignore
.idea
.vsc
node_modules
*.lock
-------------------------------------------------

3. В каталоге training_git создать репозиторий и сделать commit
4. Создать на github репозиторий по имени training_u1
5. Добавить локальный проект training_git в созданный  Github-repo

   	   git remote add origin <URL_репозитория>

6. Залить локальный репозиторий  на Github-repo

      git push -u origin master
---------------------------------------------------------------



===========================  User 2 ============

1. Получить от  User_1   <URL> Github-repo

2.  Находять в каталоге проектов !!! 
    склонировать в свой каталог проектов  Github-repo
		    git clone <URL>

3. Перейти в каталог склонированного репозитория
    cd training_u1

4. Набрать команду
   git remote -v

  будут показаны  2 строки с <URL>  Github-repo

5. Проверить содержание  файла index.html


************************************************************
*************************  Case 2  *************************

User 1 - может загружать файлы на удаленный репозиторий 
User 2 - может только получать файлы с этого репозитория 
************************************************************

============================  User 1 =============
1. Создает новый branch по dev и переходит в него
		git checkout -b dev

2.  Создает файл cat.html
---------------------------------------
  <h1>Hello from catalog</h1>
---------------------------------------

3. Делает commit изменений

4. Переключается в branch master
    git checkout  master

5. Осуществляет слияние branches
     git merge	dev

6. Осуществляет заливку файла на Github-repo
    git push


============================  User_2 =============
1. Выполнить синхронизацию с Github-repo
		git pull

2. Проверить  файл cat.html - его содержимое должно соответствовать файлу
   сat.html  User_1

3. Проверить историю коммитов
	git log



************************************************************
*************************  Case 3  *************************
User 1 - может загружать файлы на удаленный репозиторий 
User 2 - является колобарантом и тоже может загружать файлы на этот репозиторий 
************************************************************

============================  User_1 =============

1. Добавляет в репозиторий training_u1 колоборантом User_2



============================  User_2 =============

1. Создает новый branch dev и переходит в него

		git checkout -b dev


2. Создать файл price.html добавить в него код
--------------------------------
<table class="price">
	<tr>
	    <th>N</th>
	    <th>Title</th>
	    <th>Price</th>
	</tr>
	<tr>
	    <td>1</td>
	    <td>Android</td>
	    <td>333</td>
	</tr>
	<tr>
	    <td>2</td>
	    <td>Windows Phone</td>
	    <td>333</td>
	</tr>
</table>
--------------------------------

3. Cделать commit изменений

4. Переключиться в branch master
    git checkout  master

5. Осуществить слияние branches
     git merge dev

6. Осуществить отправку изменений  на Github-repo
    git push -u origin master

7. Удалить branch dev

	git branch -d dev


============================  User_1 =============

1. Переключается в branch dev  и вносит изменения в файл cat.html
   
---------------------------------------
  <h1>Hello from catalog</h1>
  <p>New paragraph</p>

---------------------------------------

3. Cделать commit изменений

4. Переключиться в branch master
    git checkout  master

------------------------------------------------------
ВНИМАНИЕ !!! ЗАПОМНИТЬ !!!
Прежде чем внести изменеия в  branches,  которые используются совместно 
сделать pull и только после этого свои изменения и push 
------------------------------------------------------

5. Выполнить синхронизацию с Github-repo
		git pull

 Проверить что в проекте появился файл price.html

6. Осуществить слияние branches
     git merge dev

7. Осуществить отправку изменений  на Github-repo
    git push

8. Удаляет branch dev
   	git branch -d dev


============================  User_2 =============

1. Выполнить синхронизацию с Github-repo
        git pull

и проверить что файл cat.html  изменися



******************************************************************
Молодцы, спасибо за работу !

!!! ВНИМАНИЕ
Локальные и Github-repo должны до следующего занятия остаться без изменений
так как дальнейшие кейсы совместной работы будут рассматриваться
на базе этих репозиториев


